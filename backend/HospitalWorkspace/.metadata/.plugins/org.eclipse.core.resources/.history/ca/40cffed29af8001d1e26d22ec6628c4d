package com.hospital.externalservices;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.hospital.model.Patient;
import com.hospital.model.SMSAdmin;
import com.hospital.model.Template;
import com.hospital.services.CallCountSmsService;
import com.hospital.services.PatientService;
import com.hospital.services.SMSAdminService;
import com.hospital.services.TemplateService;

@Service
public class SMSService {

	@Autowired
	RestTemplate restTemplet;

	@Autowired
	PatientService patientService;
	
	@Autowired
	SMSAdminService smsAdminService;

	@Autowired
	TemplateService templateService;
	
	@Autowired
	CallCountSmsService callCountSmsService;

	
	@SuppressWarnings("null")
	public List<ResponseEntity<String>> callSMSService(String token) {
		List<ResponseEntity<String>> resArray = new ArrayList<>();
		Map<String, Object> smsData = new HashMap<>();
		System.out.println("method entry...");
		List<Template> t_list = templateService.getTemplates();
		Template select_template = null;
		for(Template temp:t_list)
		{
			if(temp.getName().equals("SMS Template"))
			{
				select_template=temp;
			}
		}
		List<Patient> patientList = patientService.getAllPatients();
		SMSAdmin sa = smsAdminService.getSMSAdmins().get(0);
		
		String[] bd = select_template.getBody().split("\\$");

		String url = "http://localhost:8888/sms/sendsms";

		for (Patient p : patientList) {
			String name = p.getPatientName();
			String doctorName = p.getDoctorName();
			String appointmentTime = p.getAppointmentTime();
			String appointmentDate = p.getAppointmentDate();
			String hospitalName = p.getHospitalName();
			String contactNo = p.getContactNo();
			String subject = select_template.getSubject();
			String body = bd[0] + name + bd[1] + doctorName + bd[2] +appointmentDate+bd[3]+ appointmentTime+":00 PM" + bd[4] + hospitalName + bd[5];
			String account_sid = sa.getAccount_sid();
			String auth_token = sa.getAuth_token();
			String smsfrom=sa.getPhoneNo();
			smsData.put("smsto", contactNo);
			smsData.put("subject", subject);
			smsData.put("body", body);
			smsData.put("account_sid", account_sid);
			smsData.put("auth_token", auth_token);
			smsData.put("smsfrom", smsfrom);
			System.out.println(smsData);
			try {
				HttpHeaders header = new HttpHeaders();
				header.set("Authorization","Bearer "+token);
				header.setContentType(MediaType.APPLICATION_JSON);
				String reqBodyData = new ObjectMapper().writeValueAsString(smsData);

				HttpEntity<String> requestEnty = new HttpEntity<>(reqBodyData, header);
				ResponseEntity<String>  rs =restTemplet.exchange(url, HttpMethod.POST,requestEnty,String.class);
//				ResponseEntity<String>  rs=restTemplet.postForEntity(url, smsData, String.class);
				resArray.add(rs);
				System.out.println(callCountSmsService.updateSuccessCount());
			} catch (Exception e) {
				e.printStackTrace();
				System.out.println(callCountSmsService.updateFailureCount());
				resArray.add(ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getMessage().replace("\"", "")));
			}
		}

		return resArray;

	}


	public ResponseEntity<String> callSMSServiceById(String contactno,String token) {
		// TODO Auto-generated method stub
		Map<String, Object> smsData = new HashMap<>();
		System.out.println("method entry...");
		List<Template> t_list = templateService.getTemplates();
		Template select_template = null;
		for(Template temp:t_list)
		{
			if(temp.getName().equals("SMS Template"))
			{
				select_template=temp;
			}
		}
		Patient p = patientService.getPatientByContactNo(contactno);
		SMSAdmin sa = smsAdminService.getSMSAdmins().get(0);
		
		String[] bd = select_template.getBody().split("\\$");

		String url = "http://localhost:8888/sms/sendsms";

		String name = p.getPatientName();
		String doctorName = p.getDoctorName();
		String appointmentTime = p.getAppointmentTime();
		String appointmentDate = p.getAppointmentDate();
		String hospitalName = p.getHospitalName();
		String contactNo = p.getContactNo();
		String subject = select_template.getSubject();
		String body = bd[0] + name + bd[1] + doctorName + bd[2] +appointmentDate+bd[3]+ appointmentTime+":00 PM" + bd[4] + hospitalName + bd[5];
		String account_sid = sa.getAccount_sid();
		String auth_token = sa.getAuth_token();
		String smsfrom=sa.getPhoneNo();
		smsData.put("smsto", contactNo);
		smsData.put("subject", subject);
		smsData.put("body", body);
		smsData.put("account_sid", account_sid);
		smsData.put("auth_token", auth_token);
		smsData.put("smsfrom", smsfrom);
		System.out.println(smsData);
		try {
			ResponseEntity<String>  rs= restTemplet.postForEntity(url, smsData, String.class);
			System.out.println(callCountSmsService.updateSuccessCount());
			return rs;
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println(callCountSmsService.updateFailureCount());
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getMessage().replace("\"", ""));
		}
	}
}
